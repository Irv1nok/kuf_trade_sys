import logging

from bot.bot_config import user_data
from bot.keyboards.replykeyoboards import load_reply_keyboard_back_gen_menu

from decouple import config

from telebot import TeleBot, types


logger = logging.getLogger(__name__)
bot = TeleBot(config('BOT_TOKEN'))

def send_error_msg_not_registered(message):
    markup = load_reply_keyboard_back_gen_menu()
    bot.send_message(chat_id=message.from_user.id,
                     text='üó£ –í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã üëÄ'
                          '\n–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è..'
                          '\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏,'
                          '\n*–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞* –≤ –º–µ–Ω—é –∫–æ–º–º–∞–Ω–¥ /start üÜô',
                     reply_markup=markup,
                     parse_mode='Markdown')


def send_message(user_id: int, item,
                 user_registered: bool,
                 show_sold_items: bool = False,
                 update_message: bool = False,
                 favorites: bool = False,
                 ):
    if item.new_price:
        if item.new_price > item.base_price:
            new_price = f'{item.new_price} üî∫'
        else:
            new_price = f'{item.new_price} ‚ùóÔ∏è ‚¨áÔ∏è üî•'
    else:
        new_price = '–ù–µ—Ç'

    if user_data.user_registered:
        markup = types.InlineKeyboardMarkup()
        if not show_sold_items:
            if not favorites:
                markup.add(types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
                                                      callback_data=f'fav,add,{item.pk}'))
            else:
                markup.add(types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
                                                      callback_data=f'fav,delete,{item.pk}'))

    noimage_photo = open('bot/static/noimage.jpg', 'rb')
    if update_message:
        bot.send_message(user_id, 'üî•‚ùóÔ∏è‚ùó –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏.  ‚ùó‚ùóüî•Ô∏è')
    bot.send_photo(chat_id=user_id,
                   photo=item.photo_url if item.photo_url and not show_sold_items else noimage_photo,
                   caption=f'<b>{item.title}</b>'
                           f'\n–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: {item.base_price}'
                           f'\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {new_price}'
                           f'\n–ì–æ—Ä–æ–¥: {item.city}'
                           f'\n–ü—Ä–æ–¥–∞–Ω–æ: {"–î–∞" if item.deleted else "–ù–µ—Ç"}'
                           f'\n–î–∞—Ç–∞ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏: {item.date}'
                           f'\n–°—Å—ã–ª–∫–∞: {item.url}',
                   parse_mode='HTML',
                   reply_markup=markup if user_registered else None)

    if update_message:
        bot.send_message(user_id, 'üî•‚ùóÔ∏è‚ùó –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏.  ‚ùó‚ùóüî•Ô∏è')

    logger.info('Bot send_message')